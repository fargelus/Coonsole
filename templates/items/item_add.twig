{% extends "content.twig" %}
{% block content %}
    {{ lel }}
    <script>
        $(document).ready(function () {
          var max_length = 1;
          var current_count = 0;

          function readImage ( input ) {
            if (input.files && input.files[0]) {
              if (input.files.length > 2) {
                event.preventDefault();
              }
              $('#preview').html('');
              var length = input.files.length;
              var count = 0;
             /* $.each(input.files, function () {
                var re
              });*/
              for(var i=0; i < length; i++) {
                //console.log(input.files[i]);
                var reader = new FileReader();
                reader.readAsDataURL(input.files[i]);

                reader.onload = function (e) {
                  $('#preview').append('<img data-value="img'+count+'" src="'+e.target.result +'">');
                  count++;
                  //$('#preview').attr('src', );
                  //input.files.forEach(function (item, i, arr) {
                  //
                  //});
                };
              }

              //reader.readAsDataURL(input.files[0]);
            }
          }

          /*function printMessage(destination, msg) {
            $(destination).removeClass();
            if (msg == 'success') {
              $(destination).addClass('alert alert-success').text('Файл успешно загружен.');
            }
            if (msg == 'error') {
              $(destination).addClass('alert alert-danger').text('Произошла ошибка при загрузке файла.');
            }
          }*/

          $('#image').change(function(){
            current_count = this.files.length;
            if (current_count > max_length) {
              $('#error_photo').html('Не более '+ max_length +' фото!');
            } else {
              $('#error_photo').html('');
              readImage(this);
            }
          });

          $('form').submit(function(e) {
            event.preventDefault();
            var $that = $(this), formData = new FormData($that.get(0));
            if ( !current_count > max_length) {
              //console.log(current_count);
              $('#error_photo').html('Не более '+ max_length +' фото!');
            } else {
              var data = $(this).serializeArray();//new FormData($('form'));//
              $.ajax({
                type: "POST",
                url: '{{ path('items_add') }}',
                data: formData,
                contentType: false,
                processData: false,
                cache: false,
                success: function (response) {
                  console.log(response);
                  $('#error').html('');
                },
                error: function (error) {
                  $('#error').html(error.responseText);
                }
                //dataType: json
              });
              //console.log('work');
            }
          });
        });
    </script>
    <span id="error" style="color: red;"></span>

    <form action="{{ path('items_add') }}" method="POST">
        <label for="name">Название товара:</label>
        <input type="text" id="name" name="name" value="" />

        <label for="description">Описание:</label>
        <input type="text" id="description" name="description" value="" />

        <label for="list">Список игр:</label>
        <input type="text" id="description" name="list" value="" />

        <span id="error_photo" style="color: red;"></span>
        <label for="photo">Фото:</label>
        <div id="preview"></div>
        <input type="file" id="image" name="file[]" multiple="multiple" accept="image/png, image/jpg, image/jpeg, image/gif">

        {#
            If you want to control the URL the user
            is redirected to on success (more details below)
            <input type="hidden" name="_target_path" value="/account" />
        #}

        <button id="submit" type="submit">Добавить</button>
    </form>
{% endblock %}
